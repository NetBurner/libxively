SHELL := /bin/sh

CC ?= gcc
AR ?= ar

XI_BUILD_TYPE ?= debug

ifndef XI_OVERRIDE_CFLAGS
  XI_WARN_CFLAGS ?= -Wall -Wextra
  XI_CFLAGS += -c -std=gnu99 -Iinclude -fstrict-aliasing
  XI_CFLAGS += $(XI_WARN_CFLAGS) $(XI_EXTRA_CFLAGS)
  ifeq ($(XI_BUILD_TYPE),release)
    XI_OPTLEVEL ?= -O2
    XI_CFLAGS += $(XI_OPTLEVEL) -combine -fwhole-program
  endif
  ifeq ($(XI_BUILD_TYPE),debug)
    XI_OPTLEVEL ?= -O0
	XI_CFLAGS += -g
    XI_CFLAGS += $(XI_OPTLEVEL)
    XI_CFLAGS += -D__DEBUG
    XI_DEBUG_OUTPUT ?= 1
    XI_DEBUG_ASSERT ?= 1
    XI_CFLAGS += -DXI_DEBUG_OUTPUT=$(XI_DEBUG_OUTPUT)
    XI_CFLAGS += -DXI_DEBUG_ASSERT=$(XI_DEBUG_ASSERT)
  endif
  ifdef XI_DEBUG_PRINTF
    XI_CFLAGS += -DXI_DEBUG_PRINTF=$(XI_DEBUG_PRINTF)
  endif
  XI_CFLAGS += $(foreach constant,$(XI_OVERRIDE_CONSTANTS),-D$(constant))
  ifdef XI_OPTIMISE
    XI_CFLAGS += $(foreach constant,$(XI_OPTIMISE),-DXI_OPT_$(constant))
  endif
else
  XI_CFLAGS := $(XI_OVERRIDE_CFLAGS)
  $(warning "Overriden XI_CFLAGS with $(XI_OVERRIDE_CFLAGS)")
endif # XI_OVERRIDE_CFLAGS

ifndef XI_OVERRIDE_ARFLAGS
  XI_ARFLAGS := -rs
else
  XI_ARFLAGS := $(XI_OVERRIDE_ARFLAGS)
  $(warning "Overriden XI_ARFLAGS with $(XI_OVERRIDE_ARFLAGS)")
endif # XI_OVERRIDE_ARFLAGS

XI_OBJDIR ?= $(CURDIR)/obj
XI_BINDIR ?= $(CURDIR)/bin

XI ?= $(XI_OBJDIR)/libxively.a
